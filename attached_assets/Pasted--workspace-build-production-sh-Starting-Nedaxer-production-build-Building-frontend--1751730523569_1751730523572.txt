~/workspace$ ./build-production.sh
🚀 Starting Nedaxer production build...
📦 Building frontend...
vite v7.0.2 building for production...
✓ 2293 modules transformed.
../dist/public/assets/20250618_001710_1750207793694-AoeJmqxR.png                            6.10 kB
../dist/public/assets/20250618_001938_1750207793727-DUrGtuRJ.png                            6.11 kB
../dist/public/index.html                                                                   6.16 kB │ gzip:   1.67 kB
../dist/public/assets/20250618_001828_1750207793703-BhML_qVO.png                            7.96 kB
../dist/public/assets/20250618_001748_1750207793698-Bulh0HhN.png                            7.96 kB
../dist/public/assets/20250618_002006_1750207793730-C1o41KA5.png                            8.15 kB
../dist/public/assets/20250618_001640_1750207793691-DAS_T2Q3.png                            8.56 kB
../dist/public/assets/20250618_001859_1750207793716-7erD0uLz.png                            8.87 kB
../dist/public/assets/20250618_042459_1750217238332-BbcqRReD.png                           53.63 kB
../dist/public/assets/Refresh  app logo_1750782062607-Dentd8Fq.png                        307.36 kB
../dist/public/assets/Picsart_25-06-28_15-49-20-738 (1)_1751125238732--_rr9HCK.png        665.25 kB
../dist/public/assets/file_00000000e0d461f9b4be5c8627966318_1750209747614-DbMqjedn.png  1,585.86 kB
../dist/public/assets/index-BbsfGVSb.css                                                  130.66 kB │ gzip:  20.24 kB
../dist/public/assets/qr-scanner-worker.min-D85Z9gVD.js                                    43.95 kB │ gzip:  10.40 kB
../dist/public/assets/index-B1obJa6p.js                                                 1,414.69 kB │ gzip: 353.26 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 10.96s
✅ Frontend build completed
🔧 Building server with fixed import configuration...

  dist/index.js  250.9kb

⚡ Done in 25ms
✅ Server build completed successfully!
📁 Build outputs:
  - Frontend: dist/public/
  - Server: dist/index.js
  - Server bundle: 250KB

🎉 Production build ready!
To start: npm start
~/workspace$ npm start

> rest-express@1.0.0 prestart
> npm run check


> rest-express@1.0.0 check
> tsc

server/services/backup.service.ts:13:47 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

13       const userData = await db.select().from(users).where(eq(users.id, userId));
                                                 ~~~~~

server/services/backup.service.ts:13:63 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

13       const userData = await db.select().from(users).where(eq(users.id, userId));
                                                                 ~~~~~~~~


server/services/backup.service.ts:16:54 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>; balance: PgColumn<...' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

16       const userBalanceData = await db.select().from(userBalances).where(eq(userBalances.userId, userId));
                                                        ~~~~~~~~~~~~

server/services/backup.service.ts:16:77 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

16       const userBalanceData = await db.select().from(userBalances).where(eq(userBalances.userId, userId));
                                                                               ~~~~~~~~~~~~~~~~~~~


server/services/backup.service.ts:19:58 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

19       const userTransactionData = await db.select().from(transactions).where(eq(transactions.userId, userId));
                                                            ~~~~~~~~~~~~

server/services/backup.service.ts:19:81 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

19       const userTransactionData = await db.select().from(transactions).where(eq(transactions.userId, userId));
                                                                                   ~~~~~~~~~~~~~~~~~~~


server/services/backup.service.ts:48:47 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

48       const allUsers = await db.select().from(users);
                                                 ~~~~~

server/services/backup.service.ts:49:50 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>; balance: PgColumn<...' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

49       const allBalances = await db.select().from(userBalances);
                                                    ~~~~~~~~~~~~

server/services/backup.service.ts:50:54 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

50       const allTransactions = await db.select().from(transactions);
                                                        ~~~~~~~~~~~~

server/services/backup.service.ts:81:25 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to parameter of type 'PgTable<TableConfig>'.
  The types of '_.config.columns' are incompatible between these types.
    Type '{ id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
      Property 'id' is incompatible with index signature.
        Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
          The types of 'table._.config.columns' are incompatible between these types.
            Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
              'string' index signatures are incompatible.
                Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                  Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

81         await db.update(users)
                           ~~~~~

server/services/backup.service.ts:83:21 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

83           .where(eq(users.id, userId));
                       ~~~~~~~~


server/vite.ts:43:5 - error TS2322: Type '{ middlewareMode: boolean; hmr: { server: Server<typeof IncomingMessage, typeof ServerResponse>; host: string; port: number; }; allowedHosts: boolean; }' is not assignable to type 'ResolvedServerOptions | ServerOptions$1'.
  Type '{ middlewareMode: boolean; hmr: { server: Server<typeof IncomingMessage, typeof ServerResponse>; host: string; port: number; }; allowedHosts: boolean; }' is not assignable to type 'ServerOptions$1'.
    Types of property 'allowedHosts' are incompatible.
      Type 'boolean' is not assignable to type 'true | string[]'.

43     server: serverOptions,
       ~~~~~~

  node_modules/vite/dist/node/index.d.ts:3374:3
    3374   server: ResolvedServerOptions;
           ~~~~~~
    The expected type comes from property 'server' which is declared here on type 'ResolvedConfig | InlineConfig'


Found 12 errors in 2 files.

Errors  Files
    11  server/services/backup.service.ts:13
     1  server/vite.ts:43
~/workspace$ cd dist && npm install && node index.js
npm warn EBADENGINE Unsupported engine {
npm warn EBADENGINE   package: 'vite@7.0.2',
npm warn EBADENGINE   required: { node: '^20.19.0 || >=22.12.0' },
npm warn EBADENGINE   current: { node: 'v20.18.1', npm: '10.8.2' }
npm warn EBADENGINE }

> rest-express@1.0.0 postinstall
> npm run check


> rest-express@1.0.0 check
> tsc

server/services/backup.service.ts:13:47 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

13       const userData = await db.select().from(users).where(eq(users.id, userId));
                                                 ~~~~~

server/services/backup.service.ts:13:63 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

13       const userData = await db.select().from(users).where(eq(users.id, userId));
                                                                 ~~~~~~~~


server/services/backup.service.ts:16:54 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>; balance: PgColumn<...' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

16       const userBalanceData = await db.select().from(userBalances).where(eq(userBalances.userId, userId));
                                                        ~~~~~~~~~~~~

server/services/backup.service.ts:16:77 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

16       const userBalanceData = await db.select().from(userBalances).where(eq(userBalances.userId, userId));
                                                                               ~~~~~~~~~~~~~~~~~~~


server/services/backup.service.ts:19:58 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

19       const userTransactionData = await db.select().from(transactions).where(eq(transactions.userId, userId));
                                                            ~~~~~~~~~~~~

server/services/backup.service.ts:19:81 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

19       const userTransactionData = await db.select().from(transactions).where(eq(transactions.userId, userId));
                                                                                   ~~~~~~~~~~~~~~~~~~~


server/services/backup.service.ts:48:47 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

48       const allUsers = await db.select().from(users);
                                                 ~~~~~

server/services/backup.service.ts:49:50 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "user_balances"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>;...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>; balance: PgColumn<...' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

49       const allBalances = await db.select().from(userBalances);
                                                    ~~~~~~~~~~~~

server/services/backup.service.ts:50:54 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to parameter of type 'PgTable<TableConfig> | Subquery<string, Record<string, unknown>> | PgViewBase<string, boolean, ColumnsSelection> | SQL<...>'.
  Type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...' is not assignable to type 'PgTable<TableConfig>'.
    The types of '_.config.columns' are incompatible between these types.
      Type '{ id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'id' is incompatible with index signature.
          Type 'PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
            The types of 'table._.config.columns' are incompatible between these types.
              Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
                'string' index signatures are incompatible.
                  Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                    Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

50       const allTransactions = await db.select().from(transactions);
                                                        ~~~~~~~~~~~~

server/services/backup.service.ts:81:25 - error TS2345: Argument of type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture:...' is not assignable to parameter of type 'PgTable<TableConfig>'.
  The types of '_.config.columns' are incompatible between these types.
    Type '{ id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; profilePicture: PgColumn<...>; }' is not assignable to type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
      Property 'id' is incompatible with index signature.
        Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'.
          The types of 'table._.config.columns' are incompatible between these types.
            Type 'Record<string, import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>>'.
              'string' index signatures are incompatible.
                Type 'import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<import("/home/runner/workspace/server/node_modules/drizzle-orm/column").ColumnBaseConfig<import("/home/runner/workspace/server/node_modules/drizzle-orm/column-builder").ColumnDataType, string>, {}, {}>'.
                  Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.

81         await db.update(users)
                           ~~~~~

server/services/backup.service.ts:83:21 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: Column<ColumnBaseConfig<ColumnDataType, string>, object, object>, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Column<ColumnBaseConfig<ColumnDataType, string>, object, object>'.
      The types of 'table._.config.columns' are incompatible between these types.
        Type 'Record<string, PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>' is not assignable to type 'Record<string, Column<any, object, object>>'.
          'string' index signatures are incompatible.
            Type 'PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>' is not assignable to type 'Column<any, object, object>'.
              Property 'config' is protected but type 'Column<T, TRuntimeConfig, TTypeConfig>' is not a class derived from 'Column<T, TRuntimeConfig, TTypeConfig>'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: SQLWrapper, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'SQLWrapper'.
      The types returned by 'getSQL()' are incompatible between these types.
        Type 'import("/home/runner/workspace/node_modules/drizzle-orm/sql/sql").SQL<unknown>' is not assignable to type 'import("/home/runner/workspace/server/node_modules/drizzle-orm/sql/sql").SQL<unknown>'.
          Types have separate declarations of a private property 'shouldInlineParams'.

83           .where(eq(users.id, userId));
                       ~~~~~~~~


server/vite.ts:43:5 - error TS2322: Type '{ middlewareMode: boolean; hmr: { server: Server<typeof IncomingMessage, typeof ServerResponse>; host: string; port: number; }; allowedHosts: boolean; }' is not assignable to type 'ResolvedServerOptions | ServerOptions$1'.
  Type '{ middlewareMode: boolean; hmr: { server: Server<typeof IncomingMessage, typeof ServerResponse>; host: string; port: number; }; allowedHosts: boolean; }' is not assignable to type 'ServerOptions$1'.
    Types of property 'allowedHosts' are incompatible.
      Type 'boolean' is not assignable to type 'true | string[]'.

43     server: serverOptions,
       ~~~~~~

  node_modules/vite/dist/node/index.d.ts:3374:3
    3374   server: ResolvedServerOptions;
           ~~~~~~
    The expected type comes from property 'server' which is declared here on type 'ResolvedConfig | InlineConfig'


Found 12 errors in 2 files.

Errors  Files
    11  server/services/backup.service.ts:13
     1  server/vite.ts:43
npm error code 1
npm error path /home/runner/workspace
npm error command failed
npm error command sh -c npm run check
npm error A complete log of this run can be found in: /home/runner/.npm/_logs/2025-07-05T15_46_57_524Z-debug-0.log
~/workspace/dist$ 